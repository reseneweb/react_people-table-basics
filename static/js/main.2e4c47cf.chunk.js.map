{"version":3,"sources":["components/NavBar/NavBar.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","personInTheList","selectedPersonName","changingEndOfLink","motherInList","motherName","fatherInList","fatherName","cn","name","sex","born","died","PeopleTable","people","personName","useParams","currentPerson","toLowerCase","replaceAll","find","currentName","map","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","loading","setLoading","useEffect","catch","finally","length","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.2e4c47cf.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass\n= ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  personInTheList: (personName: string | null) => Person | null;\n  selectedPersonName: Person['name'] | null;\n  changingEndOfLink: (obj: Person) => void;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  personInTheList,\n  selectedPersonName,\n  changingEndOfLink,\n}) => {\n  const motherInList = personInTheList(person.motherName);\n  const fatherInList = personInTheList(person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        cn({ 'has-background-warning': person.name === selectedPersonName })\n      }\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n          to={`/people/${changingEndOfLink(person)}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      {personInTheList(person.motherName)\n        ? (\n          <td>\n            <Link\n              className=\"has-text-danger\"\n              to={motherInList ? `/people/${changingEndOfLink(motherInList)}` : '#'}\n            >\n              {person.motherName}\n            </Link>\n          </td>\n        )\n        : (\n          <td>{person.motherName || '-'}</td>\n        )}\n\n      {personInTheList(person.fatherName)\n        ? (\n          <td>\n            <Link\n              to={fatherInList ? `/people/${changingEndOfLink(fatherInList)}` : '#'}\n            >\n              {person.fatherName}\n            </Link>\n          </td>\n        )\n        : (\n          <td>{person.fatherName || '-'}</td>\n        )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personName } = useParams();\n\n  const changingEndOfLink = (currentPerson: Person) => {\n    return `${currentPerson.name.toLowerCase().replaceAll(' ', '-')}-${currentPerson.born}`;\n  };\n\n  const selectedPersonName\n  = people.find(\n    person => changingEndOfLink(person) === personName,\n  )?.name || null;\n\n  const personInTheList = (currentName: string | null): Person | null => {\n    return people.find(person => person.name === currentName) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.name}\n            person={person}\n            personInTheList={personInTheList}\n            selectedPersonName={selectedPersonName}\n            changingEndOfLink={changingEndOfLink}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {!people.length && !loading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!loading && !errorMessage && !!people.length && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personName\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}